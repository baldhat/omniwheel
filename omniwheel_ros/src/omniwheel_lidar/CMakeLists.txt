cmake_minimum_required(VERSION 3.8)
project(omniwheel_lidar)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)

find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(realsense2 REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(pcl_ros REQUIRED)
find_package(pcl_conversions REQUIRED)
find_package(rcl_interfaces REQUIRED)
find_package(rcutils REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)
find_package(Boost REQUIRED COMPONENTS system) 
find_package(std_srvs REQUIRED)

add_executable(lidar_node src/lidar_node.cpp)

target_link_libraries(lidar_node ${realsense2_LIBRARY} ${PCL_LIBRARIES})
ament_target_dependencies(lidar_node 
	"rclcpp" 
	"std_msgs"
	"geometry_msgs"
	"pcl_conversions"
	"rcl_interfaces"
	"rcutils"
	"sensor_msgs"
	"tf2_geometry_msgs"
 	"std_srvs"
)

target_link_libraries(lidar_node
  ${Boost_SYSTEM_LIBRARY}  # pcl_conversions requires this
)

target_include_directories(lidar_node PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)
target_compile_features(lidar_node PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

install(TARGETS lidar_node
  DESTINATION lib/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
